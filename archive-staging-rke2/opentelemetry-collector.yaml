# manually install (after installing the operator through helm)
# kubectl apply -f opentelemetry-collector.yaml
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: attributes-role
rules:
  - apiGroups:
      - ''
    resources:
      - pods
      - namespace
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: attributes-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: attributes-role
subjects:
  - kind: ServiceAccount
    name: attributes-account
    namespace: default
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: attributes-account
# ^ from: https://opentelemetry.io/blog/2022/k8s-otel-expose/#edge-cluster-configuration

---
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: simplest
  namespace: default
spec:
  # mode: deployment  # default, as a standalone application (managed like other apps)
  mode: daemonset   # run as agent in kubernetes node (so each node has 1 collector)
  # mode: statefulset # like other too but names of pods becomes predictable
  # replicas: 3
  # mode: sidecar       # running alongside the applications to monitor
  #                     # (the application configurations must be slightly adapted)
  serviceAccount: attributes-account
  env:
    - name: KUBE_NODE_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: spec.nodeName

  # Required to let access to the filelog receiver
  volumeMounts:
    - mountPath: /var/log/pods
      name: varlogpods
  volumes:
    - name: varlogpods
      hostPath:
        path: /var/log/pods
        type: Directory

  config: |
    # extensions:
    #   # with port-forward, allows to display the pipeline status to see what's been
    #   # deployed
    #   zpages:
    #     endpoint: "0.0.0.0:8889"
    receivers:
      filelog/swh:
        include:
          # FIXME: tryout: limit to only swh logs
          - /var/log/pods/swh_*/*/*.log
        exclude:
          # Exclude logs from all containers named otel-collector
          - /var/log/pods/*/otel-collector/*.log
        start_at: beginning
        include_file_path: true
        include_file_name: false
        operators:
          # - type: json_parser
          #   parse_to: body
          # - type: time_parser
          #   parse_from: body.time
          #   layout: '%Y-%m-%dT%H:%M:%S.%LZ'
          # second tryout
          # Find out which format is used by kubernetes
          # - id: get-format
          #   type: router
          #   routes:
          #     - output: parser-json
          #       expr: '$$record matches "^\\{"'
          #     - output: parser-crio
          #       expr: '$$record matches "^[^ Z]+ "'
          #     - output: parser-containerd
          #       expr: '$$record matches "^[^ Z]+Z"'
          # Parse Docker format
          # - id: parser-json
          #   type: json_parser
          #   output: extract_metadata_from_filepath
          #   timestamp:
          #     parse_from: time
          #     layout: '%Y-%m-%dT%H:%M:%S.%LZ'
          # Parse CRI-O format
          # - id: parser-crio
          #   type: regex_parser
          #   regex: '^(?P<time>[^ Z]+) (?P<stream>stdout|stderr) (?P<logtag>[^ ]*) (?P<log>.*)$'
          #   output: extract_metadata_from_filepath
          #   timestamp:
          #     parse_from: time
          #     layout_type: gotime
          #     layout: '2006-01-02T15:04:05.000000000-07:00'
          # Parse CRI-Containerd format
          - id: parser-containerd
            type: regex_parser
            regex: '^(?P<time>[^ ^Z]+Z) (?P<stream>stdout|stderr)( (?P<logtag>[^ ]*) (?P<log>.*)|.*)$'
            output: extract_metadata_from_filepath
            timestamp:
              parse_from: attributes.time
              layout: '%Y-%m-%dT%H:%M:%S.%LZ'
          # Extract metadata from file path
          - id: extract_metadata_from_filepath
            type: regex_parser
            regex: '^.*\/(?P<namespace>[^_]+)_(?P<pod_name>[^_]+)_(?P<uid>[a-f0-9\-]{36})\/(?P<container_name>[^\._]+)\/(?P<run_id>\d+)\.log$'
            parse_from: attributes["log.file.path"]
            parse_to: resource

      otlp:
        protocols:
          grpc:
          http:

    exporters:
      # Generalize the default logging (needs to be activated in the exporters)
      # logging/debug:
      #   loglevel: debug
      elasticsearch/log:
        # can be replaced by using the env variable ELASTICSEARCH_URL
        endpoints:
          - http://esnode1.internal.softwareheritage.org:9200
          - http://esnode2.internal.softwareheritage.org:9200
          - http://esnode3.internal.softwareheritage.org:9200
        api_key:
        logs_index: staging-logs

    processors:
      resource:
        attributes:
          - key: k8s.pod.name
            from_attribute: pod_name
            action: upsert
      k8sattributes:
        filter:
          node_from_env_var: KUBE_NODE_NAME
        passthrough: false
        extract:
          metadata:
            # from https://opentelemetry.io/docs/reference/specification/resource/semantic_conventions/k8s/
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.deployment.name
            - k8s.namespace.name
            - k8s.node.name
            - k8s.pod.start_time
        pod_association:
          - sources:
            - from: resource_attribute
              name: k8s.pod.name
          - sources:
            - from: connection
              name: k8s.pod.ip
          - sources:
            - from: resource_attribute
              name: k8s.pod.ip
      batch:
        # send_batch_size: 10000
        send_batch_size: 1
      attributes/insert:
        actions:
        - key: environment
          value: staging
          action: insert
        # - key: k8s.cluster.name
        #   value: archive-staging-rke2
        #   action: insert
        # - key: message
        #   action: insert
        #   from_attribute: log.value
      attributes/clean-records:
        actions:
        - key: time
          action: delete
        - key: logtag
          action: delete
        - key: log
          action: delete
        - key: log.keyword
          action: delete
        - key: log.file.path
          action: delete
        - key: log.value
          action: delete

    service:
      # telemetry:
      #   logs:
      #     level: "debug"
      # extensions:
      #   # global extension
      #   - zpages
      pipelines:
        logs:
          receivers: [otlp,filelog/swh]
          processors:
            - resource
            - k8sattributes
            - batch
            - attributes/insert
            - attributes/clean-records
          # exporters: [elasticsearch/log, logging/debug]
          exporters: [elasticsearch/log]
