# from https://argo-cd.readthedocs.io/en/latest/operator-manual/metrics/
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  namespace: argocd
  name: argocd-notifications-controller-metrics
  labels:
    app: argocd
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-notifications-controller-metrics
  namespaceSelector:
    matchNames:
      - argocd
  endpoints:
    - port: http-metrics
      scheme: http
      interval: 30s
      path: /metrics
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  namespace: argocd
  name: argocd-server-metrics
  labels:
    app: argocd
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-server-metrics
  namespaceSelector:
    matchNames:
      - argocd
  endpoints:
    - port: http-metrics
      scheme: http
      interval: 30s
      path: /metrics
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  namespace: argocd
  name: argocd-repo-server-metrics
  labels:
    app: argocd
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-repo-server-metrics
  namespaceSelector:
    matchNames:
      - argocd
  endpoints:
    - port: http-metrics
      scheme: http
      interval: 30s
      path: /metrics
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  namespace: argocd
  name: argocd-application-controller-metrics
  labels:
    app: argocd
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-application-controller-metrics
  namespaceSelector:
    matchNames:
      - argocd
  endpoints:
    - port: http-metrics
      scheme: http
      interval: 30s
      path: /metrics
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  namespace: argocd
  name: argocd-applicationset-controller-metrics
  labels:
    app: argocd
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-applicationset-controller-metrics
  namespaceSelector:
    matchNames:
     - argocd
  endpoints:
    - port: http-metrics
      scheme: http
      interval: 30s
      path: /metrics
---
# Alerting
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    app: argocd
  name: argocd-alertmanager.rules
  namespace: argocd
spec:
  groups:
  - name: argocd.rules
    rules:
    - alert: ArgoCDApplicationNotHealthy
      annotations:
        description: The application {{ $labels.name }} is not healthy since more than 1h.
        summary: An argocd application is not healthy
      expr: |-
        max_over_time(argocd_app_info{health_status='Progressing'}[5m]) == 1
      for: 1h
      labels:
        severity: critical
        namespace: cattle-monitoring-system
    - alert: ArgoCDApplicationNotSyncedCritical
      annotations:
        description: Application {{ $labels.name }} - Sync status is {{ $labels.sync_status }}
        summary: An argocd application is not in sync
      expr: max_over_time(argocd_app_info{sync_status!='Synced'}[5m]) == 1
      for: 5m
      labels:
        namespace: cattle-monitoring-system
        severity: critical
    - alert: ArgoCDClusterConnectionLost
      annotations:
        description: The connection to the cluster {{ $labels.server }} is lost since more the 1h.
        summary: An argocd cluster is unreachable
      expr: |-
        max_over_time(argocd_cluster_connection_status{}[5m]) == 0
      for: 1h
      labels:
        severity: critical
        namespace: cattle-monitoring-system
    - alert: ArgoCDInternalRedisError
      annotations:
        description: Argocd internal redis error rate detected
        summary: Failing redis queries detected
      expr: |-
        max_over_time (rate(argocd_redis_request_total{failed="true"}[5m])[60m:1m]) > 0
      for: 1h
      labels:
        severity: warning
        namespace: cattle-monitoring-system
